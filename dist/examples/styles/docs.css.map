{"version":3,"file":"examples/styles/docs.css","sources":["examples/styles/docs.scss","styles/_herogs.scss","styles/herogs/_functions.scss","styles/herogs/_mixins.scss"],"sourcesContent":["@import \"../../styles/herogs\";\n\n.grid {\n  @include gs(wrap); // init wrapper\n  @include gs(gutter, -30); // use negative value for setting gutter for wrapper\n}\n.grid__col {\n  @include gs(col); // init column\n  @include gs(gutter, 30); // use positive value for setting gutter for columns\n\n  @media (min-width: 768px){\n    @include gs(col, 1, 4); // set width for tablet devices and upper\n  }\n\n  @media (max-width: 767px){\n    & + .grid__col {\n      margin-top: 30px;\n    }\n  }\n}\n\n/* demo styles */\n\nbody {\n  margin: 0;\n}\n\n.wrapper {\n  padding: 30px;\n}\n\n.grid__content {\n  padding: 10px 15px;\n  border: 1px solid #eee;\n  background-color: #f5f5f5;\n}","@import \"herogs/functions\";\n@import \"herogs/mixins\";\n","/// Remove the unit of a length\n/// @source https://css-tricks.com/snippets/sass/strip-unit-function/\n///\n/// @argument {Number} $number\n///   Number to remove unit from\n///\n/// @return {Number} Unitless number\n\n@function gs-strip-unit($number) {\n  @if type-of($number) == 'number' and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n","/// HeroGS\n/// A helper mixin for grids\n///\n/// @argument {mix} $prop\n///   Current state of grid: \"wrap\", \"col\" or \"gutter\".\n///\n/// @argument {mix} $val1\n///   First value of current state if needed.\n///\n/// @argument {mix} $val2\n///   Second value of current state if needed.\n///\n/// @example\n///   .grid {\n///     @include gs(wrap); // init wrapper\n///     @include gs(gutter, -30); // use negative value for setting gutter for wrapper\n///   }\n///   .grid__col {\n///     @include gs(col); // init column\n///     @include gs(gutter, 30); // use positive value for setting gutter for columns\n///     @media (min-width: 768px){\n///       @include gs(col, 1, 4); // set width for tablet devices and upper\n///     }\n///   }\n///\n/// @require {function} gs-strip-unit\n\n@mixin gs($prop: null, $val1: null, $val2: null) {\n  // clearfix\n  @if $prop == clearfix {\n    &:before,\n    &:after {\n      content: \" \"; // 1\n      display: table; // 2\n    }\n    &:after {\n      clear: both;\n    }\n  }\n  // box-sizing\n  @if $prop == box-sizing {\n    & {\n      box-sizing: border-box;\n      @if $val1 == inherit {\n        > * {\n          box-sizing: inherit;\n        }\n      }\n    }\n  }\n  // init wrapper\n  @else if $prop == wrap {\n    @include gs(clearfix);\n    @include gs(box-sizing, inherit);\n  }\n  // set column width\n  @else if $prop == col and $val1 != null {\n    width: percentage($val1 / $val2);\n  }\n  // init column\n  @else if $prop == col {\n    display: inline-block;\n    width: percentage(1);\n    min-height: 1px;\n    float: left;\n  }\n  // set gutter\n  @else if $prop == gutter {\n    @if $val1 < 0 {\n      // set wrapper gutter\n      margin-left: gs-strip-unit($val1 / 2)#{px};\n      margin-right: gs-strip-unit($val1 / 2)#{px};\n    } @else {\n      // set column gutter\n      padding-left: gs-strip-unit($val1 / 2)#{px};\n      padding-right: gs-strip-unit($val1 / 2)#{px};\n    }\n  }\n}\n"],"mappings":"AAEA,AAAA,KAAK,CAAC;EGoEA,WAAW,EAAC,KAAC;EACb,YAAY,EAAC,KAAC;CHlEnB;;AAHD,AAAA,KAAK,AG4BA,OAAO,EH5BZ,AAAA,KAAK,AG6BA,MAAM,CAAC;EACN,OAAO,EAAE,GAAI;EACb,OAAO,EAAE,KAAM;CAChB;;AHhCL,AAAA,KAAK,AGiCA,MAAM,CAAC;EACN,KAAK,EAAE,IAAK;CACb;;AHnCL,AAAA,KAAK,CGuCC;EACA,UAAU,EAAE,UAAW;CAMxB;;AH9CL,AG0CU,KH1CL,GG0CK,CAAC,CAAC;EACF,UAAU,EAAE,OAAQ;CACrB;;AHxCT,AAAA,UAAU,CAAC;EGuDP,OAAO,EAAE,YAAa;EACtB,KAAK,EAAE,IAAU;EACjB,UAAU,EAAE,GAAI;EAChB,KAAK,EAAE,IAAK;EAUV,YAAY,EAAC,IAAC;EACd,aAAa,EAAC,IAAC;CHxDpB;;AATC,MAAM,EAAL,SAAS,EAAE,KAAK;EAJnB,AAAA,UAAU,CAAC;IGmDP,KAAK,EAAE,GAAU;GHtCpB;;;AALC,MAAM,EAAL,SAAS,EAAE,KAAK;EARnB,AASQ,UATE,GASF,UAAU,CAAC;IACb,UAAU,EAAE,IAAK;GAClB;;;AAIL,iBAAiB;AAEjB,AAAA,IAAI,CAAC;EACH,MAAM,EAAE,CAAE;CACX;;AAED,AAAA,QAAQ,CAAC;EACP,OAAO,EAAE,IAAK;CACf;;AAED,AAAA,cAAc,CAAC;EACb,OAAO,EAAE,SAAU;EACnB,MAAM,EAAE,cAAe;EACvB,gBAAgB,EAAE,OAAQ;CAC3B","names":[],"sourceRoot":"/source/"}